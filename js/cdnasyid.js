// Generated by CoffeeScript 1.10.0
(function() {
  jQuery(function($) {
    var cat_desc;
    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
      $('#home-hero').append($('<div class="mouse"><div class="mouse-icon"><span class="mouse-wheel"></span></div></div>'));
    }
    if (($().select2)) {
      $('select.orderby').select2({
        minimumResultsForSearch: Infinity
      });
      $('.shipping-calculator-form select').select2();
      $('.woocommerce .widget select').select2();
    }
    cat_desc = $('.tax-product_cat .term-description');
    if (cat_desc.length) {
      $('.tax-product_cat h1.entry-title').after('<h3>' + cat_desc.html() + '</h3>');
    }
    $('.search-results .heading-text h1.entry-title').each(function() {
      var searchTitle;
      $(this).data('orig-text', $(this).text());
      searchTitle = $(this).text().split(/:\s/);
      return $(this).text(searchTitle[0]).append($('<h3>For the keyword <em>' + searchTitle[1] + '</em></h3>'));
    });
    $('.form-group input, .form-group textarea').each(function() {
      var $input;
      $input = $(this);
      $input.focus(function() {
        return $input.closest('.form-group').addClass('focus');
      });
      return $input.blur(function() {
        return $input.closest('.form-group').removeClass('focus');
      });
    });
    return $('.wpcf7-form-control-wrap input').each(function() {
      return $(this).parent().before(this);
    });
  });

  jQuery(function($) {
    var getDarkColor, getDarkest, getFirstDark, getFirstLight, getLightColor, getLightest, getPalette, productGrid, productSingle, sortLightToDark;
    tinycolor.prototype.isHalfDark = function() {
      return this.getBrightness() < 192;
    };
    tinycolor.prototype.isHalfLight = function() {
      return !this.isHalfDark();
    };
    sortLightToDark = function(colors) {
      return colors.sort(function(a, b) {
        return a.getLuminance() > b.getLuminance();
      }).reverse();
    };
    getDarkest = function(palette) {
      var sorted;
      sorted = sortLightToDark(palette);
      return sorted.pop();
    };
    getLightest = function(palette) {
      return sortLightToDark(palette)[0];
    };
    getFirstDark = function(colors) {
      var darkColor;
      darkColor = null;
      $.each(colors, function(index, color) {
        if (color.isDark()) {
          darkColor = color;
          return false;
        }
      });
      if (darkColor === null) {
        darkColor = getDarkest(colors);
      }
      return darkColor;
    };
    getFirstLight = function(colors) {
      var lightColor;
      lightColor = null;
      $.each(colors, function(index, color) {
        if (color.isLight()) {
          lightColor = color;
          return false;
        }
      });
      if (lightColor === null) {
        lightColor = getLightest(colors);
      }
      return lightColor;
    };
    getPalette = function(img, num) {
      var colorThief, colors;
      colorThief = new ColorThief();
      colors = colorThief.getPalette(img, num);
      if (colors !== null) {
        return colors.map(function(rgb) {
          return tinycolor({
            r: rgb[0],
            g: rgb[1],
            b: rgb[2]
          });
        });
      }
      return false;
    };
    getDarkColor = function(palette) {
      var color;
      color = palette[0];
      if (color.isLight()) {
        color = getFirstDark(palette);
      }
      return color;
    };
    getLightColor = function(palette) {
      var color;
      color = palette[0];
      if (color.isDark()) {
        color = getFirstLight(palette);
      }
      return color;
    };
    productGrid = function() {
      $('.bg-dark .products .product').addClass('dark');
      return $('.woocommerce .products .product').each(function() {
        var $this, img, is_dark;
        $this = $(this);
        is_dark = $this.hasClass('dark');
        img = $this.find('.first-image img')[0];
        if (img == null) {
          return;
        }
        return $(img).imagesLoaded(function() {
          var artist, color, colorfulBar, details, link_title, palette;
          details = $this.find('.product-details');
          link_title = $this.find('.product-details h3 a');
          artist = $this.find('.product-details h3 a small strong');
          if ((palette = getPalette(img, 4))) {
            colorfulBar = '<div class="colorful-bar clearfix">';
            palette.forEach(function(color) {
              return colorfulBar += '<div class="col-xs-3" style="background: ' + tinycolor(color).toRgbString() + '"></div>';
            });
            colorfulBar += '</div>';
            details.before(colorfulBar);
            if (!is_dark) {
              color = getDarkColor(palette);
            } else {
              color = getLightColor(palette);
            }
            details.css({
              'color': color.toRgbString()
            });
            return artist.css({
              'border-color': color.setAlpha(.5).toRgbString()
            });
          }
        });
      });
    };
    productGrid();
    productSingle = function() {
      return $('.woocommerce.single-product').each(function() {
        var $this, img;
        $this = $(this).addClass('product-fw-split');
        img = $this.find('#product-img-slider img:first')[0];
        if (img == null) {
          return;
        }
        return $(img).imagesLoaded(function() {
          var breadcrumb, color, colorfulBar, palette, product_by, product_main, product_title, summary;
          product_main = $('.product-fw-split .product-main');
          summary = $this.find('.summary');
          product_title = $this.find('h1.product_title');
          product_by = product_title.find('small strong');
          breadcrumb = $this.find('.woocommerce-breadcrumb');
          if ((palette = getPalette(img, 4))) {
            colorfulBar = '<div class="colorful-bar clearfix">';
            palette.forEach(function(color) {
              return colorfulBar += '<div class="col-xs-3" style="background: ' + tinycolor(color).toRgbString() + '"></div>';
            });
            colorfulBar += '</div>';
            summary.prepend(colorfulBar);
            color = getDarkColor(palette);
            product_main.css({
              'cssText': 'background-color: ' + palette[0].toRgbString() + ' !important; '
            });
            summary.css({
              'color': color.toRgbString()
            });
            product_title.css({
              'color': color.toRgbString()
            });
            summary.find('.nav-previous, .nav-next').css({
              'border-color': color.lighten(40).toRgbString()
            });
            return summary.addClass('colored');
          }
        });
      });
    };
    return productSingle();
  });

}).call(this);
